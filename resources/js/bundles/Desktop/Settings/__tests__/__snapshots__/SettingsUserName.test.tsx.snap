// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingsUserName renders without crashing 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  margin-bottom: 0.5rem;
  padding: 0.25rem 0.125rem;
  width: 30%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: rgb(50,50,50);
  border-bottom: 1px dashed rgb(200,200,200);
}

.c1 {
  display: inline;
  font-weight: bold;
  font-size: 0.85rem;
  white-space: nowrap;
}

.c2 {
  width: 100%;
  text-align: right;
  border: none;
  outline: none;
  background-color: transparent;
  font-family: inherit;
  font-size: 0.8rem;
  color: rgb(50,50,50);
}

<body>
    <div>
      <div
        class="c0"
      >
        <label
          class="c1"
        >
          Name:
        </label>
        <input
          class="c2"
          type="text"
          value=""
        />
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-AykKC kUoGTD"
    >
      <label
        class="sc-AykKD Tocjq"
      >
        Name:
      </label>
      <input
        class="sc-AykKE jyHzqb"
        type="text"
        value=""
      />
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": Object {
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
    Symbol(observable): [Function],
  },
  "unmount": [Function],
}
`;
